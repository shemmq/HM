<?php
//  تستخدم هذه الكتل للتعامل مع الاستثناءات 
// تحتوي على الكود الذي قد يتسبب في استثناء(try)
// (catch) تتعامل مع الاستثناء عنما يتم رميه 
// try{
// $error=10/0;


// }catch(DivisionByZeroError $e){
//     echo"خطاء:".$e->getMessage();
// }
#############################################################
// تستخدم هذه الكتل لرمي استثناء معين  حيث يمكنك استخدام  (throw) لالقاء استثناء مخصص او استثناء موجود في php
// function checkAge($age){

//     if($age<18){
//         throw new Exception ("عليك ان تكون اكبر من 18 عام ");
//         return " انت مؤهل ";

//     }
//     try{
// echo checkAge(15);

//     } catch(Exception $e){
//         echo"خطاء:".$e->getMessage();
// }
// }
// $a=checkAge($age);
// echo $a;
###############################################################
# تستخدم لتحديد كود يجب ان ينفذ بعد(try) و(catch) بغض النظر عما اذا تم رمي استثناء ام لا
# هذا مفيد لاجراء عمليات التنظيف مثل اغلاق الملفات او تحرير الموارد
//  try{

//     $file= fopen("non_existent_file.text","r");

//  } catch(Exception $e){
//     echo"خطاء:".$e->getMessage();
// }finally{
//     echo"  سيتم التنفيذ";
// }
################################################################
# تستخدم لتحديد داله تقوم بالتعامل مع الاستثناءات الغير معالجه
#يمكنك اعداد داله مخصصه تتعامل مع جميع الاستثناءات التي لم يتم التقاطها 
function exceptionHandler($exception){
    echo" الاستثناء غير معالج";
    $exception->getMessage();
    set_exception_handler('exceptionHandler');
    throw new Exception("هذا الاستثناء غير معالج");
}

echo exceptionHandler(' ') ;
#####################################################